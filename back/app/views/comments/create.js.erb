<% if @comment.parent_id.nil? %>
// コメントの場合 /////////////////////////////////////////////////////////////////

  <% if @comment.errors.any? %>
    // エラーメッセージを表示
    document.getElementById("error_explanation").innerHTML = "<%= j(render "shared/error_messages", object: @comment) %>";
    document.getElementById("error_explanation").className = "post-error"

    // 表示されているメッセージを削除
    var deleted_post = document.getElementsByClassName("deleted-post")[0]
    if (typeof deleted_post !== 'undefined') {
      deleted_post.remove();
    }
    var completed_msg = document.getElementsByClassName("completed-section")[0]
    if (typeof completed_msg !== 'undefined') {
      completed_msg.remove();
    }    
  <% else %>
  // 既存の最新コメントの上に新規コメントを追加

  // 入力フォームを空にする(コメント用フォーム)
  document.getElementById('comment_form_text').value = '';

  // 最初のcommentの前に空のテンプレを入れる
  var new_post = document.createElement('div');
  var parent = document.getElementById('comments');
  var reference = document.getElementsByClassName("post")[0];

  // 空のテンプレの子要素として、新しいコメントを追加
  new_post.innerHTML = "<%= j(render "comments/comment", comment: @comment) %>";
  // 新しいコメント部分のみをNodeListとして抽出
  new_post = new_post.childNodes;
  // NodeListから0番目として取り出して、最初のpostの前に挿入
  parent.insertBefore(new_post[0], reference);

  // 新規コメントのリプライ欄を初期化
  document.getElementById("reply_form_text_<%= @comment.id %>").value = '';

  // 表示されているメッセージを削除
  var deleted_post = document.getElementsByClassName("deleted-post")[0]
  if (typeof deleted_post !== 'undefined') {
    deleted_post.remove();
  }
  var completed_msg = document.getElementsByClassName("completed-section")[0]
  if (typeof completed_msg !== 'undefined') {
    completed_msg.remove();
  }
  document.getElementById("error_explanation").innerHTML = "<%= j(render "shared/error_messages", object: @comment) %>";
  
  // 投稿完了メッセージを表示
  var completed_section = document.createElement('div');
  completed_section.className = 'completed-section post p-3 m-3';
  var completed_msg = document.createElement('div');
  completed_msg.className = 'w-100 text-center';
  completed_msg.innerText = '投稿が完了しました。';
  completed_section.appendChild(completed_msg);

  // 投稿したコメントの上に挿入
  var reference = document.getElementsByClassName("post")[0];
  parent.insertBefore(completed_section, reference);   
  <% end %>
<% else %>
// リプライの場合 /////////////////////////////////////////////////////////////////

  <% if @comment.errors.any? %>
  // エラーメッセージを表示  

  var error_post = document.getElementById("error_explanation_<%= @comment.parent_id %>")
  if (typeof error_post !== 'undefined' && error_post !== null) {
    error_post.innerHTML = "<%= j(render "shared/error_messages_reply", object: @comment) %>";
    error_post.className = "post-error" 
  }

  // 表示されているメッセージを削除
  var deleted_post = document.getElementsByClassName("deleted-post")[0]
  if (typeof deleted_post !== 'undefined') {
    // '削除されました。'があればremove
    deleted_post.remove();  
  }
  var completed_msg = document.getElementsByClassName("completed-section")[0]
  if (typeof completed_msg !== 'undefined') {
    completed_msg.remove();
  }
  <% else %>
  // 既存の最新リプライの上に新規リプライを追加

  // 入力フォームを空にする(リプライ用フォーム)
  var reply_form = document.getElementById("reply_form_text_<%= @comment.parent_id %>")
  if (typeof reply_form !== 'undefined' && reply_form !== null) {
    reply_form.value = '';   
  }

  // 表示されているメッセージを削除
  var deleted_post = document.getElementsByClassName("deleted-post")[0]
  if (typeof deleted_post !== 'undefined') {
    deleted_post.remove();
  }
  var completed_msg = document.getElementsByClassName("completed-section")[0]
  if (typeof completed_msg !== 'undefined') {
    completed_msg.remove();
  }

  // 投稿完了メッセージを用意
  var completed_section = document.createElement('div');
  completed_section.className = 'completed-section reply p-3 m-3';
  var completed_msg = document.createElement('div');
  completed_msg.className = 'w-100 text-center';
  completed_msg.innerText = '投稿が完了しました。';
  completed_section.appendChild(completed_msg);    

  // リプライを追加  
  var reply = document.getElementById("replies_<%= @comment.parent_id %>");
  if (typeof reply !== 'undefined' && reply !== null) {
    // 最初のreplyの前に空のテンプレを入れる
    var new_reply = document.createElement('div');
    var parent = document.getElementById("replies_<%= @comment.parent_id %>");
    var reference = parent.getElementsByClassName("reply")[0];

    // 空のテンプレの子要素として、新しいリプライを含むrepliesを追加
    new_reply.innerHTML = "<%= j(render "comments/reply", comment: @parent_comment) %>";
    // 新しいリプライ部分のみをNodeListとして抽出
    new_reply = new_reply.childNodes;

    // NodeListから1番目として取り出して、最初のtweetの前に挿入
    parent.insertBefore(new_reply[1], reference);

    // リプライ件数を更新
    document.getElementById("reply_count_<%= @comment.parent_id %>").innerHTML = "<%= j(render 'comments/reply_count', comment: @parent_comment) %>";

    // 投稿完了メッセージを投稿したリプライの上に挿入
    var reference = parent.getElementsByClassName("reply")[0];
    parent.insertBefore(completed_section, reference);    

    // エラーメッセージを削除
    document.getElementById("error_explanation_<%= @comment.parent_id %>").innerHTML = "<%= j(render "shared/error_messages_reply", object: @comment) %>";
  }
  <% end %>
<% end %>