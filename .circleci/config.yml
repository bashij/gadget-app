
version: 2.1
orbs:
  ruby: circleci/ruby@1.4.0
  browser-tools: circleci/browser-tools@1.4.0
  heroku: circleci/heroku@1.2.3
jobs:
  build:
    docker:
      - image: cimg/ruby:3.0.2-browsers
        environment:
          APP_BUNDLER_VERSION: 2.1.4
    working_directory: ~/gadget-app
    steps:
      - checkout:
          path: ~/gadget-app
      - ruby/install-deps
  test:
    docker:
      - image: cimg/ruby:3.0.2-browsers
      - image: circleci/mysql:8.0
        environment:
          MYSQL_ROOT_PASSWORD: ci_test_password
          MYSQL_DATABASE: gadget_app_test
    environment:
      BUNDLE_JOBS: "3"
      BUNDLE_RETRY: "3"
      APP_DATABASE_HOST: "127.0.0.1"
      RAILS_ENV: test
    working_directory: ~/gadget-app
    steps:
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver    
      - checkout:
          path: ~/gadget-app
      - ruby/install-deps
      - run:
          name: Database setup
          command: bundle exec rails db:migrate
      - run:
          name: yarn install
          command: yarn install
      - run:
          name: run webpack
          command: bundle exec bin/webpack
      - run:
          name: run rubocop
          command: bundle exec rubocop
      - run:
          name: run rspec
          command: bundle exec rspec spec/
  deploy:
    docker:
      - image: cimg/ruby:3.0.2-browsers
    steps:
      - checkout:
          path: ~/gadget-app
      - setup_remote_docker:
          version: 19.03.13
      - heroku/install
      - run:
          name: heroku login
          command: heroku container:login
      - run:
          name: push docker image
          command: heroku container:push web -a $HEROKU_APP_NAME
      - run:
          name: release docker image
          command: heroku container:release web -a $HEROKU_APP_NAME
      - run:
          name: Database setup
          command: |
            heroku run bundle exec rails db:migrate
            RAILS_ENV=production -a $HEROKU_APP_NAME
workflows:
  version: 2
  build_test_and_deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
          - test
          filters:
            branches:
              only: deploy-test # テスト完了後、masterに変更